{"version":3,"sources":["components/Button.js","App.js","reportWebVitals.js","index.js"],"names":["Buton","classes","this","props","Button","className","root","fullWidth","onClick","action","symbol","Component","withStyles","theme","flexGrow","height","App","reset","setState","result","addToCurrent","current","state","previous","buttons","cols","Grid","container","spacing","item","xs","TextField","type","value","variant","label","map","btn","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAYMA,E,4JAEJ,WAAU,IAAD,OACCC,EAAYC,KAAKC,MAAjBF,QACR,OAAO,oCAAM,eAACG,EAAA,EAAD,CAASC,UAAWJ,EAAQK,KAAMC,WAAW,EAAMC,QAAS,kBAAM,EAAKL,MAAMM,OAAO,EAAKN,MAAMO,SAA/F,cAA0GR,KAAKC,MAAMO,UAA3H,W,GAJSC,aAOLC,eAfG,SAAAC,GAAK,MAAK,CAC1BP,KAAM,CACHQ,SAAU,EACVC,OAAQ,QAYEH,CAAuBZ,GC6CvBgB,E,kDA3Db,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IAMRc,MAAQ,WACN,EAAKC,SAAS,CAAEC,OAAQ,OARP,EAUnBC,aAAe,SAACV,GACd,EAAKQ,SAAS,CAAEG,QAAS,EAAKC,MAAMD,QAAUX,KAT9C,EAAKY,MAAQ,CACXD,QAAS,IACTE,SAAU,IAJK,E,0CAanB,WACE,IAAMC,EAAU,CAAC,CAAEd,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKe,OACtC,CAAEP,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,cACtC,CAAEV,OAAQ,IAAKe,KAAM,EAAIhB,OAAQP,KAAKkB,eAGvD,OACE,qBAAKf,UAAU,MAAf,SACE,eAACqB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,eAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACG,IACD,cAACC,EAAA,EAAD,CACE1B,UAAU,SACV2B,KAAK,OACLC,MAAO/B,KAAKoB,MAAMD,QAClBa,QAAQ,WACRC,MAAM,gBAKTX,EAAQY,KAAI,SAACC,EAAIC,GAChB,OAAO,cAACZ,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,SACA,cAAC,EAAD,CAAgBpB,OAAQ2B,EAAI3B,OAAQe,KAAMY,EAAIZ,KAAMhB,OAAS,SAACC,GAAD,OAAW2B,EAAI5B,OAAOC,KAAvE4B,iB,GAnDb3B,aCQH4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f0b2c51f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = theme => ({\r\n  root: {\r\n     flexGrow: 1,\r\n     height: 100,\r\n   },\r\n});\r\n\r\n\r\nclass Buton extends Component {\r\n  \r\n  render() {\r\n    const { classes } = this.props;\r\n    return <div> <Button  className={classes.root} fullWidth={true} onClick={() => this.props.action(this.props.symbol)}> {this.props.symbol}</Button> </div>;\r\n  }\r\n}\r\nexport default withStyles(useStyles) (Buton);","import React, { Component } from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport Buton from \"./components/Button\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: '0',\n      previous: [],\n    };\n  }\n  reset = () => {\n    this.setState({ result: '0' });\n  };\n  addToCurrent = (symbol) => {\n    this.setState({ current: this.state.current + symbol });\n  };\n  render() {\n    const buttons = [{ symbol: \"C\", cols: 3 , action: this.reset },\n                     { symbol: \"/\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"7\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"8\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"9\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"X\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"4\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"5\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"6\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"-\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"1\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"2\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"3\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"+\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"0\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \".\", cols: 1 , action: this.addToCurrent },\n                     { symbol: \"=\", cols: 1 , action: this.addToCurrent },\n                    ];\n                     \n    return (\n      <div className=\"App\">\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            {\" \"}\n            <TextField\n              className=\"result\"\n              type=\"text\"\n              value={this.state.current}\n              variant=\"outlined\"\n              label=\"resultat\"\n            />\n          </Grid>\n\n          \n          {buttons.map((btn,i) => {\n            return <Grid item xs={3} >\n                   <Buton key={i}  symbol={btn.symbol} cols={btn.cols} action= {(symbol)=> btn.action(symbol)} />\n                   </Grid>\n          })}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}